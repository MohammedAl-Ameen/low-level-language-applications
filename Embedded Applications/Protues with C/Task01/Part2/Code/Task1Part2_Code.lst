CCS PCM C Compiler, Version 5.049, 5967               21-Oct-20 03:54

               Filename:   D:\Projects\Programing\Embedded\Task1Part2_Code.lst

               ROM used:   467 words (6%)
                           Largest free fragment is 2048
               RAM used:   5 (1%) at main() level
                           5 (1%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses xt , nowdt 
.................... #use delay(clock=2 000 000) 
....................  
....................  
.................... void main(){ 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  BSF    03.5
0008:  BSF    1F.0
0009:  BSF    1F.1
000A:  BSF    1F.2
000B:  BCF    1F.3
000C:  MOVLW  07
000D:  MOVWF  1C
000E:  BCF    03.7
....................  
.................... while(1){ 
....................  
....................  
....................  
.................... output_bit(pin_b3,0); 
000F:  BCF    03.5
0010:  BCF    06.3
0011:  BSF    03.5
0012:  BCF    06.3
.................... output_bit(pin_b4,0); 
0013:  BCF    03.5
0014:  BCF    06.4
0015:  BSF    03.5
0016:  BCF    06.4
.................... output_bit(pin_b5,0); 
0017:  BCF    03.5
0018:  BCF    06.5
0019:  BSF    03.5
001A:  BCF    06.5
.................... output_bit(pin_b6,0); 
001B:  BCF    03.5
001C:  BCF    06.6
001D:  BSF    03.5
001E:  BCF    06.6
....................  
....................  
....................  
.................... if(!input(pin_b0)){ 
001F:  BSF    06.0
0020:  BCF    03.5
0021:  BTFSC  06.0
0022:  GOTO   0AF
....................  
.................... output_bit(pin_b3,0); 
0023:  BCF    06.3
0024:  BSF    03.5
0025:  BCF    06.3
.................... output_bit(pin_b4,1); 
0026:  BCF    03.5
0027:  BSF    06.4
0028:  BSF    03.5
0029:  BCF    06.4
.................... output_bit(pin_b5,1); 
002A:  BCF    03.5
002B:  BSF    06.5
002C:  BSF    03.5
002D:  BCF    06.5
.................... output_bit(pin_b6,1); 
002E:  BCF    03.5
002F:  BSF    06.6
0030:  BSF    03.5
0031:  BCF    06.6
....................  
.................... if(!input(pin_b0)){ 
0032:  BSF    06.0
0033:  BCF    03.5
0034:  BTFSC  06.0
0035:  GOTO   046
.................... output_high(pin_d0); 
0036:  BSF    03.5
0037:  BCF    08.0
0038:  BCF    03.5
0039:  BSF    08.0
.................... output_low(pin_d1); 
003A:  BSF    03.5
003B:  BCF    08.1
003C:  BCF    03.5
003D:  BCF    08.1
.................... output_low(pin_d2); 
003E:  BSF    03.5
003F:  BCF    08.2
0040:  BCF    03.5
0041:  BCF    08.2
.................... output_low(pin_d3); 
0042:  BSF    03.5
0043:  BCF    08.3
0044:  BCF    03.5
0045:  BCF    08.3
.................... } 
....................  
.................... output_bit(pin_b3,1); 
0046:  BSF    06.3
0047:  BSF    03.5
0048:  BCF    06.3
.................... output_bit(pin_b4,0); 
0049:  BCF    03.5
004A:  BCF    06.4
004B:  BSF    03.5
004C:  BCF    06.4
.................... output_bit(pin_b5,1); 
004D:  BCF    03.5
004E:  BSF    06.5
004F:  BSF    03.5
0050:  BCF    06.5
.................... output_bit(pin_b6,1); 
0051:  BCF    03.5
0052:  BSF    06.6
0053:  BSF    03.5
0054:  BCF    06.6
....................  
.................... if(!input(pin_b0)){ 
0055:  BSF    06.0
0056:  BCF    03.5
0057:  BTFSC  06.0
0058:  GOTO   069
.................... output_low(pin_d0); 
0059:  BSF    03.5
005A:  BCF    08.0
005B:  BCF    03.5
005C:  BCF    08.0
.................... output_low(pin_d1); 
005D:  BSF    03.5
005E:  BCF    08.1
005F:  BCF    03.5
0060:  BCF    08.1
.................... output_high(pin_d2); 
0061:  BSF    03.5
0062:  BCF    08.2
0063:  BCF    03.5
0064:  BSF    08.2
.................... output_low(pin_d3); 
0065:  BSF    03.5
0066:  BCF    08.3
0067:  BCF    03.5
0068:  BCF    08.3
.................... } 
....................  
.................... output_bit(pin_b3,1); 
0069:  BSF    06.3
006A:  BSF    03.5
006B:  BCF    06.3
.................... output_bit(pin_b4,1); 
006C:  BCF    03.5
006D:  BSF    06.4
006E:  BSF    03.5
006F:  BCF    06.4
.................... output_bit(pin_b5,0); 
0070:  BCF    03.5
0071:  BCF    06.5
0072:  BSF    03.5
0073:  BCF    06.5
.................... output_bit(pin_b6,1); 
0074:  BCF    03.5
0075:  BSF    06.6
0076:  BSF    03.5
0077:  BCF    06.6
....................  
.................... if(!input(pin_b0)){ 
0078:  BSF    06.0
0079:  BCF    03.5
007A:  BTFSC  06.0
007B:  GOTO   08C
.................... output_high(pin_d0); 
007C:  BSF    03.5
007D:  BCF    08.0
007E:  BCF    03.5
007F:  BSF    08.0
.................... output_high(pin_d1); 
0080:  BSF    03.5
0081:  BCF    08.1
0082:  BCF    03.5
0083:  BSF    08.1
.................... output_high(pin_d2); 
0084:  BSF    03.5
0085:  BCF    08.2
0086:  BCF    03.5
0087:  BSF    08.2
.................... output_low(pin_d3); 
0088:  BSF    03.5
0089:  BCF    08.3
008A:  BCF    03.5
008B:  BCF    08.3
.................... } 
....................  
.................... output_bit(pin_b3,1); 
008C:  BSF    06.3
008D:  BSF    03.5
008E:  BCF    06.3
.................... output_bit(pin_b4,1); 
008F:  BCF    03.5
0090:  BSF    06.4
0091:  BSF    03.5
0092:  BCF    06.4
.................... output_bit(pin_b5,1); 
0093:  BCF    03.5
0094:  BSF    06.5
0095:  BSF    03.5
0096:  BCF    06.5
.................... output_bit(pin_b6,0); 
0097:  BCF    03.5
0098:  BCF    06.6
0099:  BSF    03.5
009A:  BCF    06.6
....................  
.................... if(!input(pin_b0)){ 
009B:  BSF    06.0
009C:  BCF    03.5
009D:  BTFSC  06.0
009E:  GOTO   0AF
.................... output_high(pin_d0); 
009F:  BSF    03.5
00A0:  BCF    08.0
00A1:  BCF    03.5
00A2:  BSF    08.0
.................... output_high(pin_d1); 
00A3:  BSF    03.5
00A4:  BCF    08.1
00A5:  BCF    03.5
00A6:  BSF    08.1
.................... output_high(pin_d2); 
00A7:  BSF    03.5
00A8:  BCF    08.2
00A9:  BCF    03.5
00AA:  BSF    08.2
.................... output_high(pin_d3); 
00AB:  BSF    03.5
00AC:  BCF    08.3
00AD:  BCF    03.5
00AE:  BSF    08.3
.................... } 
.................... } 
.................... if(!input(pin_b1)){ 
00AF:  BSF    03.5
00B0:  BSF    06.1
00B1:  BCF    03.5
00B2:  BTFSC  06.1
00B3:  GOTO   140
.................... { 
.................... output_bit(pin_b3,0); 
00B4:  BCF    06.3
00B5:  BSF    03.5
00B6:  BCF    06.3
.................... output_bit(pin_b4,1); 
00B7:  BCF    03.5
00B8:  BSF    06.4
00B9:  BSF    03.5
00BA:  BCF    06.4
.................... output_bit(pin_b5,1); 
00BB:  BCF    03.5
00BC:  BSF    06.5
00BD:  BSF    03.5
00BE:  BCF    06.5
.................... output_bit(pin_b6,1); 
00BF:  BCF    03.5
00C0:  BSF    06.6
00C1:  BSF    03.5
00C2:  BCF    06.6
....................  
.................... if(!input(pin_b1)){ 
00C3:  BSF    06.1
00C4:  BCF    03.5
00C5:  BTFSC  06.1
00C6:  GOTO   0D7
.................... output_low(pin_d0); 
00C7:  BSF    03.5
00C8:  BCF    08.0
00C9:  BCF    03.5
00CA:  BCF    08.0
.................... output_high(pin_d1); 
00CB:  BSF    03.5
00CC:  BCF    08.1
00CD:  BCF    03.5
00CE:  BSF    08.1
.................... output_low(pin_d2); 
00CF:  BSF    03.5
00D0:  BCF    08.2
00D1:  BCF    03.5
00D2:  BCF    08.2
.................... output_low(pin_d3); 
00D3:  BSF    03.5
00D4:  BCF    08.3
00D5:  BCF    03.5
00D6:  BCF    08.3
.................... } 
....................  
.................... output_bit(pin_b3,1); 
00D7:  BSF    06.3
00D8:  BSF    03.5
00D9:  BCF    06.3
.................... output_bit(pin_b4,0); 
00DA:  BCF    03.5
00DB:  BCF    06.4
00DC:  BSF    03.5
00DD:  BCF    06.4
.................... output_bit(pin_b5,1); 
00DE:  BCF    03.5
00DF:  BSF    06.5
00E0:  BSF    03.5
00E1:  BCF    06.5
.................... output_bit(pin_b6,1); 
00E2:  BCF    03.5
00E3:  BSF    06.6
00E4:  BSF    03.5
00E5:  BCF    06.6
....................  
.................... if(!input(pin_b1)){ 
00E6:  BSF    06.1
00E7:  BCF    03.5
00E8:  BTFSC  06.1
00E9:  GOTO   0FA
.................... output_high(pin_d0); 
00EA:  BSF    03.5
00EB:  BCF    08.0
00EC:  BCF    03.5
00ED:  BSF    08.0
.................... output_low(pin_d1); 
00EE:  BSF    03.5
00EF:  BCF    08.1
00F0:  BCF    03.5
00F1:  BCF    08.1
.................... output_high(pin_d2); 
00F2:  BSF    03.5
00F3:  BCF    08.2
00F4:  BCF    03.5
00F5:  BSF    08.2
.................... output_low(pin_d3); 
00F6:  BSF    03.5
00F7:  BCF    08.3
00F8:  BCF    03.5
00F9:  BCF    08.3
.................... } 
....................  
.................... output_bit(pin_b3,1); 
00FA:  BSF    06.3
00FB:  BSF    03.5
00FC:  BCF    06.3
.................... output_bit(pin_b4,1); 
00FD:  BCF    03.5
00FE:  BSF    06.4
00FF:  BSF    03.5
0100:  BCF    06.4
.................... output_bit(pin_b5,0); 
0101:  BCF    03.5
0102:  BCF    06.5
0103:  BSF    03.5
0104:  BCF    06.5
.................... output_bit(pin_b6,1); 
0105:  BCF    03.5
0106:  BSF    06.6
0107:  BSF    03.5
0108:  BCF    06.6
....................  
.................... if(!input(pin_b1)){ 
0109:  BSF    06.1
010A:  BCF    03.5
010B:  BTFSC  06.1
010C:  GOTO   11D
.................... output_low(pin_d0); 
010D:  BSF    03.5
010E:  BCF    08.0
010F:  BCF    03.5
0110:  BCF    08.0
.................... output_low(pin_d1); 
0111:  BSF    03.5
0112:  BCF    08.1
0113:  BCF    03.5
0114:  BCF    08.1
.................... output_low(pin_d2); 
0115:  BSF    03.5
0116:  BCF    08.2
0117:  BCF    03.5
0118:  BCF    08.2
.................... output_high(pin_d3); 
0119:  BSF    03.5
011A:  BCF    08.3
011B:  BCF    03.5
011C:  BSF    08.3
.................... } 
....................  
.................... output_bit(pin_b3,1); 
011D:  BSF    06.3
011E:  BSF    03.5
011F:  BCF    06.3
.................... output_bit(pin_b4,1); 
0120:  BCF    03.5
0121:  BSF    06.4
0122:  BSF    03.5
0123:  BCF    06.4
.................... output_bit(pin_b5,1); 
0124:  BCF    03.5
0125:  BSF    06.5
0126:  BSF    03.5
0127:  BCF    06.5
.................... output_bit(pin_b6,0); 
0128:  BCF    03.5
0129:  BCF    06.6
012A:  BSF    03.5
012B:  BCF    06.6
....................  
.................... if(!input(pin_b1)){ 
012C:  BSF    06.1
012D:  BCF    03.5
012E:  BTFSC  06.1
012F:  GOTO   140
.................... output_low(pin_d0); 
0130:  BSF    03.5
0131:  BCF    08.0
0132:  BCF    03.5
0133:  BCF    08.0
.................... output_low(pin_d1); 
0134:  BSF    03.5
0135:  BCF    08.1
0136:  BCF    03.5
0137:  BCF    08.1
.................... output_low(pin_d2); 
0138:  BSF    03.5
0139:  BCF    08.2
013A:  BCF    03.5
013B:  BCF    08.2
.................... output_low(pin_d3); 
013C:  BSF    03.5
013D:  BCF    08.3
013E:  BCF    03.5
013F:  BCF    08.3
.................... } 
.................... } 
.................... } 
.................... if(!input(pin_b2)){ 
0140:  BSF    03.5
0141:  BSF    06.2
0142:  BCF    03.5
0143:  BTFSC  06.2
0144:  GOTO   1D1
.................... { 
.................... output_bit(pin_b3,0); 
0145:  BCF    06.3
0146:  BSF    03.5
0147:  BCF    06.3
.................... output_bit(pin_b4,1); 
0148:  BCF    03.5
0149:  BSF    06.4
014A:  BSF    03.5
014B:  BCF    06.4
.................... output_bit(pin_b5,1); 
014C:  BCF    03.5
014D:  BSF    06.5
014E:  BSF    03.5
014F:  BCF    06.5
.................... output_bit(pin_b6,1); 
0150:  BCF    03.5
0151:  BSF    06.6
0152:  BSF    03.5
0153:  BCF    06.6
....................  
.................... if(!input(pin_b2)){ 
0154:  BSF    06.2
0155:  BCF    03.5
0156:  BTFSC  06.2
0157:  GOTO   168
.................... output_high(pin_d0); 
0158:  BSF    03.5
0159:  BCF    08.0
015A:  BCF    03.5
015B:  BSF    08.0
.................... output_high(pin_d1); 
015C:  BSF    03.5
015D:  BCF    08.1
015E:  BCF    03.5
015F:  BSF    08.1
.................... output_low(pin_d2); 
0160:  BSF    03.5
0161:  BCF    08.2
0162:  BCF    03.5
0163:  BCF    08.2
.................... output_low(pin_d3); 
0164:  BSF    03.5
0165:  BCF    08.3
0166:  BCF    03.5
0167:  BCF    08.3
.................... } 
....................  
.................... output_bit(pin_b3,1); 
0168:  BSF    06.3
0169:  BSF    03.5
016A:  BCF    06.3
.................... output_bit(pin_b4,0); 
016B:  BCF    03.5
016C:  BCF    06.4
016D:  BSF    03.5
016E:  BCF    06.4
.................... output_bit(pin_b5,1); 
016F:  BCF    03.5
0170:  BSF    06.5
0171:  BSF    03.5
0172:  BCF    06.5
.................... output_bit(pin_b6,1); 
0173:  BCF    03.5
0174:  BSF    06.6
0175:  BSF    03.5
0176:  BCF    06.6
....................  
.................... if(!input(pin_b2)){ 
0177:  BSF    06.2
0178:  BCF    03.5
0179:  BTFSC  06.2
017A:  GOTO   18B
.................... output_low(pin_d0); 
017B:  BSF    03.5
017C:  BCF    08.0
017D:  BCF    03.5
017E:  BCF    08.0
.................... output_high(pin_d1); 
017F:  BSF    03.5
0180:  BCF    08.1
0181:  BCF    03.5
0182:  BSF    08.1
.................... output_high(pin_d2); 
0183:  BSF    03.5
0184:  BCF    08.2
0185:  BCF    03.5
0186:  BSF    08.2
.................... output_low(pin_d3); 
0187:  BSF    03.5
0188:  BCF    08.3
0189:  BCF    03.5
018A:  BCF    08.3
.................... } 
....................  
.................... output_bit(pin_b3,1); 
018B:  BSF    06.3
018C:  BSF    03.5
018D:  BCF    06.3
.................... output_bit(pin_b4,1); 
018E:  BCF    03.5
018F:  BSF    06.4
0190:  BSF    03.5
0191:  BCF    06.4
.................... output_bit(pin_b5,0); 
0192:  BCF    03.5
0193:  BCF    06.5
0194:  BSF    03.5
0195:  BCF    06.5
.................... output_bit(pin_b6,1); 
0196:  BCF    03.5
0197:  BSF    06.6
0198:  BSF    03.5
0199:  BCF    06.6
....................  
.................... if(!input(pin_b2)){ 
019A:  BSF    06.2
019B:  BCF    03.5
019C:  BTFSC  06.2
019D:  GOTO   1AE
.................... output_high(pin_d0); 
019E:  BSF    03.5
019F:  BCF    08.0
01A0:  BCF    03.5
01A1:  BSF    08.0
.................... output_low(pin_d1); 
01A2:  BSF    03.5
01A3:  BCF    08.1
01A4:  BCF    03.5
01A5:  BCF    08.1
.................... output_low(pin_d2); 
01A6:  BSF    03.5
01A7:  BCF    08.2
01A8:  BCF    03.5
01A9:  BCF    08.2
.................... output_high(pin_d3); 
01AA:  BSF    03.5
01AB:  BCF    08.3
01AC:  BCF    03.5
01AD:  BSF    08.3
.................... } 
....................  
.................... output_bit(pin_b3,1); 
01AE:  BSF    06.3
01AF:  BSF    03.5
01B0:  BCF    06.3
.................... output_bit(pin_b4,1); 
01B1:  BCF    03.5
01B2:  BSF    06.4
01B3:  BSF    03.5
01B4:  BCF    06.4
.................... output_bit(pin_b5,1); 
01B5:  BCF    03.5
01B6:  BSF    06.5
01B7:  BSF    03.5
01B8:  BCF    06.5
.................... output_bit(pin_b6,0); 
01B9:  BCF    03.5
01BA:  BCF    06.6
01BB:  BSF    03.5
01BC:  BCF    06.6
....................  
.................... if(!input(pin_b2)){ 
01BD:  BSF    06.2
01BE:  BCF    03.5
01BF:  BTFSC  06.2
01C0:  GOTO   1D1
.................... output_high(pin_d0); 
01C1:  BSF    03.5
01C2:  BCF    08.0
01C3:  BCF    03.5
01C4:  BSF    08.0
.................... output_low(pin_d1); 
01C5:  BSF    03.5
01C6:  BCF    08.1
01C7:  BCF    03.5
01C8:  BCF    08.1
.................... output_high(pin_d2); 
01C9:  BSF    03.5
01CA:  BCF    08.2
01CB:  BCF    03.5
01CC:  BSF    08.2
.................... output_high(pin_d3); 
01CD:  BSF    03.5
01CE:  BCF    08.3
01CF:  BCF    03.5
01D0:  BSF    08.3
.................... } 
.................... } 
....................  
.................... } 
01D1:  GOTO   010
....................  
....................  
.................... } 
....................  
....................  
....................  
....................  
.................... } 
01D2:  SLEEP

Configuration Fuses:
   Word  1: 2F41   XT NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
